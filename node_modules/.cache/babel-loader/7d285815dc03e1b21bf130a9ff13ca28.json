{"ast":null,"code":"var _jsxFileName = \"D:\\\\Adi\\\\Projects\\\\r-portfolio\\\\src\\\\Components\\\\Preloader\\\\preloader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './preloader.css';\nimport ReactLoading from 'react-loading';\nimport loader from './loader.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Preloader = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [done, setdone] = useState(undefined);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts/1').then(response => response.json()).then(json => console.log(json));\n    setData(json);\n    setdone(true);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"preloader\",\n      children: /*#__PURE__*/_jsxDEV(ReactLoading, {\n        type: 'bars'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Preloader, \"DeeOOyDu+mXMhw6tHlL6EeCkvBY=\");\n\n_c = Preloader;\nexport { Preloader };\n\nvar _c;\n\n$RefreshReg$(_c, \"Preloader\");","map":{"version":3,"sources":["D:/Adi/Projects/r-portfolio/src/Components/Preloader/preloader.js"],"names":["React","useEffect","useState","ReactLoading","loader","Preloader","data","setData","done","setdone","undefined","fetch","then","response","json","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,iBAAP;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAACQ,SAAD,CAAhC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,KAAK,CAAC,8CAAD,CAAL,CACKC,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EAEKF,IAFL,CAEWE,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAFpB;AAGIP,IAAAA,OAAO,CAACO,IAAD,CAAP;AACAL,IAAAA,OAAO,CAAC,IAAD,CAAP;AACP,GANQ,EAMN,EANM,CAAT;AAQA,sBACI;AAAA,2BACI;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA,6BACI,QAAC,YAAD;AAAc,QAAA,IAAI,EAAE;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAOH,CAnBD;;GAAMJ,S;;KAAAA,S;AAqBN,SAASA,SAAT","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './preloader.css'\r\nimport ReactLoading from 'react-loading';\r\nimport loader from './loader.gif'\r\n\r\nconst Preloader = () => {\r\n    const [data, setData] = useState([])\r\n    const [done, setdone] = useState(undefined)\r\n\r\n    useEffect(() => {\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n            .then((response) => response.json())\r\n            .then((json) => console.log(json));\r\n            setData(json)\r\n            setdone(true)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div id='preloader'>\r\n                <ReactLoading type={'bars'} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport { Preloader };"]},"metadata":{},"sourceType":"module"}